/**
 * Write a description of class Action here.
 * 
 * @author (David Florence) 
 * @version (.2.8.69)
 */
import java.util.ArrayList;
import java.util.Scanner; 
public class Action extends Player
{
    
    public String Options(Player pCurrent,ArrayList<Player> players ,cardDeck deck, Player tokenCount)
    /**
     * This String allows Players to choose their action
     * 
     * i.e Income, Exchange, coup , etc...
     * 
     * First, shows player's available actions
     * Second, Allows player to choose their action
     */
     
    {
        {
            // initialise instance variables

            System.out.println("1.Income");
            System.out.println("2.foreignAid");
            System.out.println("3.coup");
            System.out.println("4.Tax");
            System.out.println("5.Assassinate");
            System.out.println("6.Exchange");
            System.out.println("7.Steal");
            System.out.print("Enter your ACTION");  
            String actionString;
            /*
             * The next switch case method 
             */
            int choice = 0;
            Scanner userInput = new Scanner(System.in);
            System.out.println("Enter an action ");
            choice = userInput.nextInt();
            switch(choice)
            {
                case 1:
                Income(pCurrent);
                return "Income";
                break;
                case 2:
                foreignAid(pCurrent);
                return "foreignAid";
                break;
                case 3:
                coup(players , pCurrent);
                return "coup";
                break;
                case 4:
                Tax(pCurrent);
                return "Tax";
                break;
                case 5:
                Assassinate(players);
                return "Assassinate";
                break;
                case 6:
                Exchange(deck);
                return "Exchange";
                break;
                case 7:
                Steal(pCurrent);
                return "Steal";
                break;

            }
        }
    }

    public int Income( Player pCurrent)
    {     
        /**
         * Player draws two tokens from the plie
         */
        //takes a coin
        /* case 
         */
        pCurrent.addTokens(2);
    }

    public static void foreignAid(Player pCurrent)
    {
        /**
         * PLayer draws three tokens from the pile
         */
        //takes 3 coins
        pCurrent.addTokens(3);

    }

    public void coup( ArrayList<Player> players , Player pCurrent)
    {
        //kills a player's card 
        //uses 7 coins
        /**
         * The player, after paying 7 tokens, chooses who they want to attck and then they kill one of the selected party's cards.
         */

        Scanner userInput = new Scanner(System.in);
        if (pCurrent.tokenCount >= 3)
        {
            pCurrent.subtractTokens(3);     
            for(int i=0;i<players.size();i++)
            {
                System.out.println(players.get(i).getName);
            }
            System.out.println("Which player would you like to affect?");            
            cardDeck.Discard();
        }
        else
            System.out.println("Unavailable action");
    }

    public void Tax(Player pCurrent)
    {
        //take 3 coins
        /**
         * Player draws 7 tokens
         */
        pCurrent.addTokens(7);

    }

    public void Assassinate(ArrayList<Player> players)
    {
        /**
         * /killa a card by paying 3 coins
         */
        
        Scanner userInput = new Scanner(System.in);
        if (pCurrent.getTokenCount >= 3)
        {
            Player.subtractTokens(3);     
            for(int i=0;i<players.size();i++)
            {
                System.out.println(player.get(i).getName());
            }
            System.out.println("Which player would you like to affect?");            
            cardDeck.Discard();
        }
        else
            System.out.println("Unavailable action");

    }

    public void Exchange(cardDeck deck)
    {
        /**
         * exchange cards with court deck or another player
         */

        deck.exchange();

    }

    public void Steal(Player pCurrent)
    {
        /**
         * take 2 coins from another player
         * adds them to current player Tokens
         */
        //take 2 coins from another player

        pCurrent.addTokens(2);

        return;
    } 
}
